steps:
  # Step 1: Compile the Go Application
  - name: 'gcr.io/cloud-builders/go'
    env: ['GOPATH=/gopath']
    args: ['build', '-o', 'main', 'main.go']

  # Step 2: Build the Docker image for the Go application
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        '${_REGION}-docker.pkg.dev/$PROJECT_ID/my-repository/hello-cloudbuild-dev:${_VERSION}',
        '.'
      ]

  # Step 3: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_REGION}-docker.pkg.dev/$PROJECT_ID/my-repository/hello-cloudbuild-dev:${_VERSION}'
      ]
  # ðŸ‘‰ Step 4: Update image in deployment.yaml before applying
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sed -i "s#IMAGE_PLACEHOLDER#${_REGION}-docker.pkg.dev/${PROJECT_ID}/my-repository/hello-cloudbuild-dev:${_VERSION}#g" dev/deployment.yaml

  # Step 5: Deploy to the 'dev' namespace in GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'Deploy'
    args: ['-n', 'dev', 'apply', '-f', 'dev/deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_REGION=${_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=hello-cluster'

options:
  logging: CLOUD_LOGGING_ONLY
